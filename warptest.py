import cv2
import numpy as np
import numpy.linalg as la
import cubicspline as cs
import matplotlib.pyplot as plt

height = 960
width = 1280

K = np.matrix([[756.78768558,   0.        , 629.89805344],
               [  0.        , 756.86336981, 345.49169401],
               [  0.        ,   0.        ,   1.        ]])

def cos(angle):
    return np.cos(np.deg2rad(angle))

def sin(angle):
    return np.sin(np.deg2rad(angle))

def findHomography(r, p, y, t):
    
    Rx = np.matrix([[cos(r), -sin(r), 0.],
                    [sin(r),  cos(r), 0.],
                    [    0.,      0., 1.]])
    
    Ry = np.matrix([[1.,     0.,      0.],
                    [0., cos(p), -sin(p)], 
                    [0., sin(p),  cos(p)]])


    Rz = np.matrix([[ cos(y), 0., sin(y)],
                    [     0., 1.,     0.],
                    [-sin(y), 0., cos(y)]])

    R = Rx*Ry*Rz

    n = [0., 0., 1.]
    d = 50
    
    H = K*(R + t*np.transpose(n)/d)*la.inv(K)
    return(H)

roll_imu =  [3.3,
3.27,
3.55,
3.65,
3.84,
4.03,
3.25,
1.74,
-0.29,
-1.27,
-1.63,
-2.35,
-2.35,
-3.79,
-5.09,
-5.86,
-6.93,
-8.35,
-9.47,
-9.67,
-10.07,
-10.6,
-11.97,
-13.41,
-14.3,
-16.83,
-17.48,
-18.4,
-18.08,
-15.75,
-12.53,
-10.8,
-8.44,
-6.74,
-6.46,
-6.39,
-0.75,
-0.59,
1.69,
3.11,
6.48,
8.54,
6.26,
2.61,
2.3,
0.14,
-2.9,
-3.5,
-3.49,
-7.6,
-11.93,
-12.11,
-10.52,
-16.14,
-12.34,
-8.0,
-8.28,
-6.69,
-3.9,
-2.55,
-1.62,
-0.17,
2.26,
0.21,
-1.92,
-3.6,
-7.62,
-9.9,
-12.13,
-14.08,
-15.9,
-17.12,
-18.48,
-19.36,
-21.57,
-24.19,
-23.42,
-20.97,
-19.78,
-19.15,
-18.17,
-16.37,
-12.07,
-7.75,
-2.65,
1.99,
5.46,
10.35,
14.44,
17.7,
18.69,
17.75,
15.74,
13.0,
8.08,
3.71,
-0.07,
-2.51,
-5.2,
-6.51,
-6.56,
-6.64,
-3.4,
-0.47,
-0.46,
1.65,
4.64,
6.87,
7.92,
5.88,
3.82,
0.06,
-3.85,
-6.7,
-9.04,
-10.46,
-13.77,
-17.32,
-20.08,
-22.26,
-22.63,
-22.06,
-21.42,
-8.78,
-6.52,
-6.08,
-2.37,
1.81,
2.95,
4.16,
7.36,
6.66,
5.17,
5.56,
1.17,
-0.56,
-6.65,
-8.19,
-8.95,
-9.5,
-8.59,
-10.95,
-14.93,
-18.27,
-18.47,
-18.27,
-17.08,
-16.51,
-13.97,
-10.83,
-8.96,
-2.17,
0.04,
3.13,
0.9,
2.36,
0.08,
-2.56,
-7.7,
-10.53,
]

pitch_imu = [9.83,
9.85,
9.5,
9.56,
9.0,
9.77,
10.42,
10.86,
11.61,
11.81,
12.18,
12.47,
12.74,
13.89,
14.45,
15.36,
15.76,
17.36,
18.15,
18.19,
18.93,
18.89,
19.14,
19.95,
20.2,
20.89,
21.15,
21.53,
22.11,
21.32,
19.52,
18.78,
18.27,
17.46,
17.06,
17.24,
15.43,
14.55,
14.84,
13.79,
13.73,
12.75,
12.75,
13.69,
14.14,
13.88,
14.96,
15.76,
15.92,
16.68,
17.44,
18.44,
18.61,
18.55,
18.48,
17.65,
17.1,
17.46,
16.25,
15.19,
15.4,
15.34,
14.74,
14.48,
14.46,
14.26,
13.93,
14.48,
14.56,
14.75,
14.29,
14.15,
14.35,
15.1,
15.35,
15.39,
15.77,
15.34,
15.38,
14.84,
14.03,
13.65,
13.12,
12.46,
10.6,
8.21,
6.18,
4.53,
4.72,
3.99,
3.5,
3.7,
4.15,
4.65,
4.52,
5.51,
5.62,
5.63,
5.24,
4.83,
5.6,
8.44,
10.37,
10.28,
9.95,
8.0,
8.04,
7.19,
7.26,
7.95,
7.92,
7.78,
7.8,
7.87,
7.43,
6.51,
7.27,
7.77,
8.53,
8.13,
7.47,
6.49,
6.13,
7.31,
6.85,
7.35,
7.01,
6.34,
3.98,
2.98,
1.36,
1.66,
2.58,
3.66,
4.17,
4.37,
3.7,
3.92,
3.07,
3.21,
3.25,
3.4,
3.97,
2.88,
2.58,
3.25,
2.7,
3.83,
3.28,
3.05,
2.69,
2.39,
1.97,
1.31,
1.58,
2.42,
2.64,
1.68,
1.67,
2.07
]


R = cs.Spline()
P = cs.Spline()

sampling_ratio = 10
frames = len(roll_imu)

roll_targets = R.findWarpTargets(sampling_ratio, roll_imu)
pitch_targets = P.findWarpTargets(sampling_ratio, pitch_imu)

warp = np.zeros((height, width, 3), dtype=float)
for i in range(frames - 2*sampling_ratio):
    img = cv2.imread('./data/original/'+str(i)+'.jpg')
    roll_bias = -roll_imu[i]
    pitch_bias = pitch_targets[i]-pitch_imu[i]
    #pitch_bias = pitch_imu[i]
    #print(str(i) + ' target: ' + str(pitch_targets[i]))
    
    H = findHomography(roll_bias, pitch_bias, 0., np.array([[0.], [0.], [0.]])) #13.5-z
    warp = cv2.warpPerspective(img, H, (width, height))
    cv2.imwrite('./data/p2/'+str(i)+'.jpg', warp)

